volumes:
  l1_data:
  l1_bn_data:
  l1_vc_data:
  l2_data:
  safedb_data:
  op_log:
  celestia-app-data:
  celestia-bridge-data:
  da_data:

services:
  l1:
    build:
      context: .
      dockerfile: docker/devnet/l1-geth.Dockerfile
    ports:
      - "8545:8545"
      - "8546:8546"
      - "7060:6060"
    volumes:
      - "l1_data:/db"
      - "${PWD}/envs/devnet/config/genesis/genesis-l1.json:/genesis.json"
      - "${PWD}/envs/devnet/keys/test-jwt-secret.txt:/config/jwt-secret.txt"
    environment:
      GETH_MINER_RECOMMIT: 100ms

  l1-bn:
    depends_on:
      - l1
    build:
      context: .
      dockerfile: docker/devnet/l1-lighthouse.Dockerfile
    ports:
      - "9000:9000"
      - "5052:5052"
    volumes:
      - "l1_bn_data:/db"
      - "${PWD}/envs/devnet/keys/test-jwt-secret.txt:/config/jwt-secret.txt"
      - "${PWD}/envs/devnet/beacon-data/config.yaml:/genesis/config.yaml"
      - "${PWD}/envs/devnet/beacon-data/deposit_contract_block.txt:/genesis/deposit_contract_block.txt"
      - "${PWD}/envs/devnet/config/genesis/genesis-l1.ssz:/genesis/genesis.ssz"
    environment:
      LH_EXECUTION_ENDPOINT: "http://l1:8551"
    entrypoint:
      - "/bin/sh"
      - "/entrypoint-bn.sh"

  l1-vc:
    depends_on:
      - l1
      - l1-bn
    build:
      context: .
      dockerfile: docker/devnet/l1-lighthouse.Dockerfile
    volumes:
      - "l1_vc_data:/db"
      - "${PWD}/envs/devnet/beacon-data/data/keys:/validator_setup/validators"
      - "${PWD}/envs/devnet/beacon-data/data/secrets:/validator_setup/secrets"
      - "${PWD}/envs/devnet/beacon-data/config.yaml:/genesis/config.yaml"
      - "${PWD}/envs/devnet/beacon-data/deposit_contract_block.txt:/genesis/deposit_contract_block.txt"
      - "${PWD}/envs/devnet/config/genesis/genesis-l1.ssz:/genesis/genesis.ssz"
    environment:
      LH_BEACON_NODES: "http://l1-bn:5052/"
    entrypoint:
      - "/bin/sh"
      - "/entrypoint-vc.sh"

  l2:
    build:
      context: .
      dockerfile: docker/devnet/l2-geth.Dockerfile
    ports:
      - "9545:8545"
      - "8060:6060"
    volumes:
      - "l2_data:/db"
      - "${PWD}/scripts/devnet/l2-op-geth-entrypoint.sh:/entrypoint.sh"
      - "${PWD}/envs/devnet/config/genesis/genesis-l2.json:/genesis.json"
      - "${PWD}/envs/devnet/keys/test-jwt-secret.txt:/config/jwt-secret.txt"
    entrypoint:  # pass the L2 specific flags by overriding the entry-point and adding extra arguments
      - "/bin/sh"
      - "/entrypoint.sh"
    environment:
      GETH_MINER_RECOMMIT: 100ms
      TRACER_NAME: ${TRACER_NAME}

  op-node:
    depends_on:
      - l1
      - l1-bn
      - l1-vc
      - l2
    build:
      context: ..
      target: op-node
    image: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-node:v1.10.2
    command: >
      op-node
      --l1=ws://l1:8546
      --l1.beacon=http://l1-bn:5052
      --l1.epoch-poll-interval=12s
      --l1.http-poll-interval=6s
      --l2=http://l2:8551
      --l2.jwt-secret=/config/jwt-secret.txt
      --sequencer.enabled
      --sequencer.l1-confs=0
      --verifier.l1-confs=0
      --p2p.sequencer.key=8b3a350cf5c34c9194ca85829a2df0ec3153be0318b5e2d3348e872092edffba
      --rollup.config=/rollup.json
      --rpc.addr=0.0.0.0
      --rpc.port=8545
      --p2p.listen.ip=0.0.0.0
      --p2p.listen.tcp=9003
      --p2p.listen.udp=9003
      --p2p.scoring.peers=light
      --p2p.ban.peers=true
      --p2p.priv.path=/config/p2p-node-key.txt
      --metrics.enabled
      --metrics.addr=0.0.0.0
      --metrics.port=7300
      --pprof.enabled
      --rpc.enable-admin
      --safedb.path=/db
      --altda.enabled=true
      --altda.da-service=true
      --altda.da-server=http://da-server:3100
    ports:
      - "7545:8545"
      - "9003:9003"
      - "7300:7300"
      - "6060:6060"
    volumes:
      - "safedb_data:/db"
      - "${PWD}/envs/devnet/keys/p2p-sequencer-key.txt:/config/p2p-sequencer-key.txt"
      - "${PWD}/envs/devnet/keys/p2p-node-key.txt:/config/p2p-node-key.txt"
      - "${PWD}/envs/devnet/keys/test-jwt-secret.txt:/config/jwt-secret.txt"
      - "${PWD}/envs/devnet/config/genesis/rollup.json:/rollup.json"
      - op_log:/op_log

  op-proposer:
    depends_on:
      - l1
      - l2
      - op-node
    build:
      context: ..
      target: op-proposer-target
    image: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-proposer:v1.9.5
    ports:
      - "6062:6060"
      - "7302:7300"
      - "6546:8545"
    environment:
      OP_PROPOSER_L1_ETH_RPC: http://l1:8545
      OP_PROPOSER_ROLLUP_RPC: http://op-node:8545
      OP_PROPOSER_POLL_INTERVAL: 1s
      OP_PROPOSER_NUM_CONFIRMATIONS: 1
      OP_PROPOSER_MNEMONIC: test test test test test test test test test test test junk
      OP_PROPOSER_L2_OUTPUT_HD_PATH: "m/44'/60'/0'/0/1"
      OP_PROPOSER_L2OO_ADDRESS: "${L2OO_ADDRESS}"
      OP_PROPOSER_GAME_FACTORY_ADDRESS: "0xb8f18681C2f9fCF470a5e5E3fEd0FFE29CD17D90"
      OP_PROPOSER_GAME_TYPE: "254"
      OP_PROPOSER_PROPOSAL_INTERVAL: "12s"
      OP_PROPOSER_PPROF_ENABLED: "true"
      OP_PROPOSER_METRICS_ENABLED: "true"
      OP_PROPOSER_ALLOW_NON_FINALIZED: "true"
      OP_PROPOSER_RPC_ENABLE_ADMIN: "true"

  op-batcher:
    depends_on:
      - l1
      - l2
      - op-node
    image: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-batcher:v1.10.0
    build:
      context: ..
      target: "op-batcher"
    ports:
      - "6061:6060"
      - "7301:7300"
      - "6545:8545"
    environment:
      OP_BATCHER_L1_ETH_RPC: http://l1:8545
      OP_BATCHER_L2_ETH_RPC: http://l2:8545
      OP_BATCHER_ROLLUP_RPC: http://op-node:8545
      OP_BATCHER_MAX_CHANNEL_DURATION: 10
      OP_BATCHER_SUB_SAFETY_MARGIN: 4 # SWS is 15, ChannelTimeout is 40
      OP_BATCHER_POLL_INTERVAL: 1s
      OP_BATCHER_NUM_CONFIRMATIONS: 1
      OP_BATCHER_MNEMONIC: test test test test test test test test test test test junk
      OP_BATCHER_SEQUENCER_HD_PATH: "m/44'/60'/0'/0/2"
      OP_BATCHER_PPROF_ENABLED: "true"
      OP_BATCHER_METRICS_ENABLED: "true"
      OP_BATCHER_RPC_ENABLE_ADMIN: "true"
      OP_BATCHER_BATCH_TYPE: 1
      OP_BATCHER_ALTDA_ENABLED: "true"
      OP_BATCHER_ALTDA_DA_SERVICE: "true"
      OP_BATCHER_ALTDA_DA_SERVER: "http://da-server:3100"
      OP_BATCHER_DATA_AVAILABILITY_TYPE: "calldata"

  celestia-app:
    image: ghcr.io/celestiaorg/celestia-app:v3.3.0
    container_name: celestia-app
    volumes:
      - celestia-app-data:/home/celestia/.celestia-app
      - ${PWD}/scripts/devnet/cel-consensus.sh:/cel-consensus.sh
      - ./shared:/shared
    ports:
      - "26657:26657"
      - "9090:9090"
    entrypoint: [ "/bin/sh" ]
    command: [ "/cel-consensus.sh" ]
    user: root

  celestia-bridge:
    image: ghcr.io/celestiaorg/celestia-node:v0.20.4
    container_name: celestia-bridge
    volumes:
      - celestia-bridge-data:/home/celestia/bridge
      - ${PWD}/scripts/devnet/cel-bridge.sh:/cel-bridge.sh
      - ./shared:/shared
    ports:
      - "26658:26658"
      - "26659:26659"
    depends_on:
      - celestia-app
    environment:
      - CELESTIA_CUSTOM=test
    entrypoint: [ "/bin/sh" ]
    command: [ "/cel-bridge.sh" ]
    user: root

  da-server:
    depends_on:
      - l1
      - celestia-bridge
    image: smstack/da-aggregator:latest
    command: >
      da-server
        --host=0.0.0.0
        --port=3100
        --private-key=0x47e179ec197488593b187f80a00eb0da91f1b9d0b13f8733639f19c30a34926a
        --batch-inbox-address=0x00289c189bee4e70334629f04cd5ed602b6600eb
        --shard-nums=4,3,2,1
    environment:
      DA_SERVER_ETH_RPC_URL: http://l1:8545
      DA_SERVER_ETH_BEACON_URL: http://l1-bn:5052
      DA_SERVER_CELESTIA1_RPC_URL: http://celestia-bridge:26658
      DA_SERVER_CELESTIA1_NAMESPACE: "0xdead"
      DA_SERVER_CELESTIA1_TOKEN: test-token
      DA_SERVER_CELESTIA1_KEY: my_celes_key
      DA_SERVER_CELESTIA2_RPC_URL: http://celestia-bridge:26658
      DA_SERVER_CELESTIA2_NAMESPACE: "0xbeef"
      DA_SERVER_CELESTIA2_TOKEN: test-token
      DA_SERVER_CELESTIA2_KEY: my_celes_key
      DA_SERVER_CELESTIA3_RPC_URL: http://celestia-bridge:26658
      DA_SERVER_CELESTIA3_NAMESPACE: "0xcafe"
      DA_SERVER_CELESTIA3_TOKEN: test-token
      DA_SERVER_CELESTIA3_KEY: my_celes_key
      DA_SERVER_CHAIN_ID: 900
    ports:
      - "3100:3100"
    volumes:
      - "da_data:/indexer/data/db"

  prometheus:
    image: prom/prometheus
    volumes:
      - "${PWD}/scripts/devnet/prometheus.yml:/etc/prometheus/prometheus.yml"
    ports:
      - "9091:9090"
    command: --config.file=/etc/prometheus/prometheus.yml --log.level=debug

  grafana:
    image: grafana/grafana
    ports:
      - "3001:3000"
    depends_on:
      - prometheus